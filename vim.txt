Vim
===

Good site for vim colorschemes: https://vimcolorschemes.com/
Good site for vim plugins: https://vimawesome.com


config files:
-------------
~/.vimrc                                general configs
~/.vim/pack/myplugins/{start,opt}       from git version 8.0+ native ability to handle plugins
                                        just clone the git repo into the 'start` folder for autoloading or
                                        clone the git repo into 'opt` folder and start on demandh ':packadd nerdtree`
                                        'myplugins' is an arbitrary foldername for grouping plugins
commands:
---------
:scriptnames                            list sourced config files and vim scripts
:set runtimepath?                       list all folders vim looks for config files in

/																				search forward
?																				search backwards
/\V.																		search for literal dot '.' with magic mode disabled (\V)
/\.	  																	search for literal dot . (escaped)
/\<i																		search words beginning with 'i'
:%s/old/new/g                           global text replacement
:s/old/new/g                            text replacement on current line
:10,15s/old/new/g                       text replacement on lines 10-15 inclusive
:10,$s/old/new/gc                       text replacement on lines 10-end with confirmation
:/SEARCHTERM/e+2												search end of searchterm plus 2 characters
:/SEARCHTERM/b+2												search beginning of searchterm plus 2 characters
:/SEARCHTERM/+2													search searchterm plus 2 lines down
:/SEARCHTERM/-2													search searchterm plus 2 lines up

*																				search for word under cursor
#																				search backwards for word under cursor

!ctags -R FOLDER												create tags for a folder in terminal
:tag ex_echo														go to tag in FOLDER/file, i.e. function 'ex_echo'
<ctrl-x]>	SOMETHING-TAGGED							context menu of existing tags starting w SOMETHING
<ctrl-xf> FILENAME											get list of files
gf																			go to file under cursor (back: <ctrl-o>)
<ctrl-w>f																open file under cursor in new window

:e <file>                               open file in new buffer (in same window)
:enew                                   open empty new buffer
:split                                  split window horizontally
:vsplit                                 split window vertically
:new                                    open a new, empty buffer in a new window
:below new                              open a new, empty buffer in a new window below
:new <file>                             open file in a new window above
:on																			close all windows except active one
:r																			readi in file
:view																		open file READONLY
:%d																			delete all lines

:ls                                     list all buffers
:bn                                     hop to next buffer
:bp                                     hop to previous buffer
:b3                                     go to buffer 3
:bd                                     delete buffer (close buffer and window)
:ball                                   load all buffers
bufdo g/function/d											delete lines containing "function" in all buffers

:tabnew <file>                          open file in a new tab
:tabn                                   hop to next tab
:tabp                                   hop to previous tab
:tabfirst                               hop to first tab
:tablast                                hop to last tab
:tabclose                               closetab
:tabonly																turn all tabs to buffers except current
:tab split															move window in its own tab
:tabmove #															move tab to position # (0-indexed)
#gt																			go to tab #
gt																			go to next tab

wa                                      write all changes to disk

ml                                      set bookmark using letter 'l'
'l                                      go to beginning of bookmark line
`l                                      go to exact bookmark l
:marks                                  show all bookmarks
:delmarks l                             delete bookmark l

:[{                                     jump to opening curly braces
:]}                                     jump to closing curly braces
:[(                                     same for parenthesis
:])

%																				jump to opposite [ { ( <

zz																			center screen on cursor
zt																			align top of screen with cursor
zb																			align bottom of screen with cursor

qa                                      record macro a
q                                       stop recording
@a                                      play macro
10@a                                    play macro 10x

"ayy                                    store line-yank in register a
"ap                                     paste register a
"%p                                     print current file name
"/																			last search pattern register
"_																			black hole register
"0																			last yank register
"+																			system clipboard register
:reg																		view all registers

da"                                     delete surrounding quotes and content
di"                                     delete word inside quotes
ca" / ci"                               change instead of delete
vab                                     mark block within ()
Vi{																			mark all lines in a curly braces block
cc																		  change (replace) entire line
d/.*SEARCHTERM													delete from cursor to SEARCHTERM (not including)
<ctrl-xl>																autocomplete line based on existing code
<ctrl-n>																autocomplete word
<ctrl-n>e																exit autocomplete menu

==																			auto-indent
~																				switch case

za																			toggle fold under cursor
zo																			open fold under cursor
zc																			close fold under cursor
zd																			delete fold under cursor
zM																			close all folds
zR																			open all folds
zj																			move to next fold
zk																			move to previous fold
zfat																		zf=fold at=around Tag (set foldmethod=manual)

:term																		open a terminal window
<ctrl-w>N															  enter normal mode in terminal window
A																				return to terminal mode
<ctrl-w>:																enter command mode in terminal
<ctrl-w>q																put terminal window into background

:g/var/d                                g selects regex pattern + command (d=delete)
:vim[grep] /^top/gjf **/*								search for 'top' at beginning of line in repo
																				g=global, j=don't jump, f=nogegex
																				then use 'copen' or 'cw' to chose from results
:set gp=git\ grep\ -n										use ':grep something' to git grep smth in repo (:cw)

q:                                      browse commands history, enter to execute

:set colorcolumn=80                     color column 80 as EOL mark
:syntax off                             get rid of all color highlighting
:let mapleader = "\\"                   set the <leader> key to \

:ha																			print buffer

In command mode:
<ctrl-rw>																insert text under cursor
<ctrl -r>"															insert content of " register (yank)

:args																		list files in args (the files initially opened together)
:args srf/*.js													add all javascript files in the src folder to args
:argdo %s/function/func/g								substitute function with func in all args files


edit remote files:
------------------
vim scp://thomasgrusz@controller/~/test.txt

